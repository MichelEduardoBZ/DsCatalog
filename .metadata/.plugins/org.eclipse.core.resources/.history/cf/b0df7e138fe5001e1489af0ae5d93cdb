package com.michel.dscatalog.services;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.michel.dscatalog.entities.Category;
import com.michel.dscatalog.entities.dto.category.CategoryDTO;
import com.michel.dscatalog.repositories.CategoryRepository;

@Service
public class CategoryService {
	
	@Autowired
	private CategoryRepository categoryRepository;
	
	@Transactional(readOnly = true)
	public List<CategoryDTO> findAll(){
		List<Category> listCategoryDto = categoryRepository.findAll();
		return listCategoryDto.stream().map(element -> new CategoryDTO(element)).collect(Collectors.toList());
	}

	public CategoryDTO findById(Long id) {
		Optional<Category> category = categoryRepository.findById(id);
		return (category.isPresent()) ? new CategoryDTO(category.get()) : null;

	}

}
